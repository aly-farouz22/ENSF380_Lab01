// 4.4.2
package com.yourname.calculator;

public class Application {
    public static void main(String[] args) {
        // TODO: Parse CLI arguments or wait for user input
    }

    // TODO: Define methods for calculations
}

// 4.4.3
import java.util.Scanner;

public class Application {
    public static void main(String[] args) {
        if (args.length > 0) {
            // Process CLI arguments
        } else {
            // No CLI arguments, ask for user input
            Scanner scanner = new Scanner(System.in);
            System.out.println("Enter operation (e.g., add, subtract, multiply, divide):");
            String operation = scanner.next();
            // Further processing based on operation
        }
    }

    // Other Methods' placeholders
}

// 4.4.4
public static double add(double a, double b) {
    return a + b;
}

public static double factorial(double n) {
    if (n <= 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

// 4.4.5
// Inside main or another method after getting operation
switch (operation.toLowerCase()) {
    case "add":
        System.out.println("Enter the first operand:");
        double num1 = scanner.nextDouble();
        System.out.println("Enter the second operand:");
        double num2 = scanner.nextDouble();
        System.out.println("Result: " + add(num1, num2));
        break;
    case "factorial":
        System.out.println("Enter a number:");
        double number = scanner.nextDouble();
        System.out.println("Result: " + factorial(number));
        break;
    // Handle other operations
}

// 5.2
// Factorial calculation with progress display
public static long factorial(int num) {
    if (num < 0) {
        System.out.println("Factorial of negative number is undefined.");
        return 0;
    }
    return factorialHelper(num, num);
}

private static long factorialHelper(int originalNum, int num) {
    if (num <= 1) {
        return 1;
    }
    // Calculate progress and update progress bar
    int progress = (int) (((originalNum - num) / (double) originalNum) * 100);
    System.out.print("\rCalculating factorial: " + progress + "%");
    return num * factorialHelper(originalNum, num - 1);
}

// 5.3
// Exponentiation
public static double power(double base, double exponent) {
    return Math.pow(base, exponent);
}

// Square root
public static double sqrt(double number) {
    return Math.sqrt(number);
}

// Natural logarithm
public static double log(double number) {
    return Math.log(number);
}

// Base-10 logarithm
public static double log10(double number) {
    return Math.log10(number);
}

// Sine function
public static double sin(double angleRadians) {
    return Math.sin(angleRadians);
}

// Cosine function
public static double cos(double angleRadians) {
    return Math.cos(angleRadians);
}

// Tangent function
public static double tan(double angleRadians) {
    return Math.tan(angleRadians);
}

// 5.4
public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    
    while (true) {
        System.out.println("\nEnter operation (add, subtract, multiply, divide, pow, sqrt, log, log10, sin, cos, tan, factorial) or 'exit' to quit:");
        String operation = scanner.next();
        
        if (operation.equalsIgnoreCase("exit")) {
            System.out.println("Exiting calculator...");
            break;
        }

        // For operations requiring two inputs
        if (!operation.equalsIgnoreCase("sqrt") && !operation.equalsIgnoreCase("log") && !operation.equalsIgnoreCase("log10") && !operation.equalsIgnoreCase("sin") && !operation.equalsIgnoreCase("cos") && !operation.equalsIgnoreCase("tan") && !operation.equalsIgnoreCase("factorial")) {
            System.out.print("Enter first number: ");
            double num1 = scanner.nextDouble();
            System.out.print("Enter second number: ");
            double num2 = scanner.nextDouble();

            switch (operation.toLowerCase()) {
                case "add":
                    System.out.println("Result: " + add(num1, num2));
                    break;
                case "subtract":
                    System.out.println("Result: " + subtract(num1, num2));
                    break;
                case "multiply":
                    System.out.println("Result: " + multiply(num1, num2));
                    break;
                case "divide":
                    System.out.println("Result: " + divide(num1, num2));
                    break;
                case "pow":
                    System.out.println("Result: " + power(num1, num2));
                    break;
                default:
                    System.out.println("Invalid operation.");
                    break;
            }
        } else {
            // For operations requiring one input
            System.out.print("Enter number: ");
            double num = scanner.nextDouble();

            switch (operation.toLowerCase()) {
                case "sqrt":
                    System.out.println("Result: " + sqrt(num));
                    break;
                case "log":
                    System.out.println("Result: " + log(num));
                    break;
                case "log10":
                    System.out.println("Result: " + log10(num));
                    break;
                case "sin":
                    System.out.println("Result: " + sin(num));
                    break;
                case "cos":
                    System.out.println("Result: " + cos(num));
                    break;
                case "tan":
                    System.out.println("Result: " + tan(num));
                    break;
                case "factorial":
                    // Factorial is a special case requiring an integer
                    System.out.println("Result: " + factorial((int)num));
                    break;
                default:
                    System.out.println("Invalid operation.");
                    break;
            }
        }
    }
    
    scanner.close();
}
